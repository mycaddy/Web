### types >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
scalar DateTime
### <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< types

### Query >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
type Query {
  countries(filter: String, skip: Int, first: Int, orderBy: CountryOrderByInput): Countries!
}

enum CountryOrderByInput {
  id_ASC
  id_DESC
  id_number_ASC
  id_number_DESC
  iso_numeric_ASC
  iso_numeric_DESC
  iso_alpha_2_ASC
  iso_alpha_2_DESC
  iso_alpha_3_ASC
  iso_alpha_3_DESC
  name_en_ASC
  name_en_DESC
  name_kr_ASC
  name_kr_DESC
  dial_number_ASC
  dial_number_DESC
}

type Countries {
  count: Int!
  data: [Country!]!
}

type Clubs {
  count: Int!
  data: [Club]!
}

type Courses {
  count: Int!
  data: [Course]!
}

type Holes {
  count: Int!
  data: [Hole]!
}
### <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Query

### Mutation >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
type Mutation {
  signUp(email: String!, password: String!, name: String!): AuthPayload
  signIn(email: String!, password: String!): AuthPayload
  addCountry(
    id_number: Int
    iso_numeric: String, 
    iso_alpha2: String, 
    iso_alpha_3: String, 
    name_en: String!, 
    name_kr: String!, 
    dial_number: String!
  ): Country!
  removeCountry(id: String!): Country!
}

type AuthPayload {
  token: String
  user: User
}
### <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Mutation

### Subscription >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

### <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< Subscription


### From datamodel.prisma >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
type User {
  id: ID!
  email: String
  name: String!
  password: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Country {
  id: ID!
  id_number: Int
  iso_numeric: Int
  iso_alpha_2: String
  iso_alpha_3: String
  name_en: String! 
  name_kr: String
  dial_number: String 
}

type Club {
  id: ID!
  id_number: Int
  name: String
  name_origin: String
  sw_lat: String
  sw_lng: String
  ne_lat: String
  ne_lng: String
  address1: String
  address2: String
  contry: Country
  course: [Course]
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Course {
  id: ID!
  club: Club!
  seq_no: Int
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Hole {
  id: ID!
  seq_no: Int
  course: Course
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Geodata {
  id: ID!
  course: Course
  lat: String
  lng: String
  alt: String
  createdAt: DateTime!
  updatedAt: DateTime!
}
 ### <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<< datamodel.prisma
